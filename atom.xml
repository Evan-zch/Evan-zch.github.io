<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>未来大可期</title>
  
  <subtitle>敲代码也挺好的，就是头顶有点凉！</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://evanzch.github.io/"/>
  <updated>2019-11-04T11:08:49.699Z</updated>
  <id>https://evanzch.github.io/</id>
  
  <author>
    <name>EvanZch</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Android Studio 导入系统jar包的正确姿势</title>
    <link href="https://evanzch.github.io//blog/Android%20Studio%20%E5%AF%BC%E5%85%A5%E7%B3%BB%E7%BB%9Fjar%E5%8C%85%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF.html"/>
    <id>https://evanzch.github.io//blog/Android Studio 导入系统jar包的正确姿势.html</id>
    <published>2018-08-30T05:56:29.000Z</published>
    <updated>2019-11-04T11:08:49.699Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote><p>前段时间负责了一个系统设置的项目，里面用到了大量的系统隐藏方法，所以自己用Eclipse打了一个系统jar包，但是导入到Android studio的时候，中间踩了很多坑，现在总结一下，防止大家踩坑。</p></blockquote><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><blockquote><p>按照下面步骤一步一步来，基本不会出现大问题。</p></blockquote><h4 id="1、将系统jar包放到module的libs文件夹下"><a href="#1、将系统jar包放到module的libs文件夹下" class="headerlink" title="1、将系统jar包放到module的libs文件夹下"></a>1、将系统jar包放到module的libs文件夹下</h4><a id="more"></a><p><img src="https://upload-images.jianshu.io/upload_images/3167266-24c630a432e35cf8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h4 id="2、在Module下的build-gradle添加"><a href="#2、在Module下的build-gradle添加" class="headerlink" title="2、在Module下的build.gradle添加"></a>2、在Module下的<code>build.gradle</code>添加</h4><figure class="highlight isbl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">provided</span> <span class="function"><span class="title">files</span>(<span class="string">'libs/android_framework.jar'</span>)</span></span><br></pre></td></tr></table></figure><blockquote><p>注意 <code>provided</code>作用是只在编译时使用，最终不会打包到Apk中<br><strong>更新 ：在<code>Android studio3.0</code> 后，<del>provided</del> 被 <code>compileOnly</code> 替代</strong> </p></blockquote><p>####3、在Project下的<code>build.gradle</code>文件中添加</p><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">   gradle.projectsEvaluated &#123;</span><br><span class="line">        tasks.withType(JavaCompile) &#123;</span><br><span class="line">            options.compilerArgs.<span class="keyword">add</span><span class="bash">(<span class="string">'-Xbootclasspath/p:app/libs/android_framework.jar'</span>)         </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>app/libs/android_framework.jar 为jar包路径，app为Module名<br>注意：<code>gradle.projectsEvaluated</code> 是放在 <code>allprojects</code> 标签内。</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/3167266-8f047868988a7386.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>这个时候基本就算大功告成了，但是，你会发现，使用系统隐藏方法的地方还是会爆红，那是因为Android Studio在编译时优先使用系统的Sdk。</p><p><img src="https://upload-images.jianshu.io/upload_images/3167266-61ffbc88f5faa86a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><blockquote><p>找到Module下的.iml文件，在里面将你导入的jar包放在sdk之前，这样Android studio编译时优先使用导入的系统jar而不是sdk中的。</p></blockquote><p><img src="https://upload-images.jianshu.io/upload_images/3167266-4b91e8966b8685ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><p>通过代码改变，在module的build.gradle中最后添加如下代码重新编译后，会发现顺序变化</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">preBuild &#123;</span><br><span class="line">    <span class="keyword">doLast</span> &#123;</span><br><span class="line">        <span class="keyword">def</span> imlFile = <span class="keyword">file</span>(<span class="keyword">project</span>.name + <span class="string">".iml"</span>)</span><br><span class="line">        <span class="keyword">println</span> <span class="string">'Change '</span> + <span class="keyword">project</span>.name + <span class="string">'.iml order'</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">def</span> parsedXml = (<span class="keyword">new</span> XmlParser()).parse(imlFile)</span><br><span class="line">            <span class="keyword">def</span> jdkNode = parsedXml.component[<span class="number">1</span>].orderEntry.<span class="keyword">find</span> &#123; it.<span class="string">'@type'</span> == <span class="string">'jdk'</span> &#125;</span><br><span class="line">            parsedXml.component[<span class="number">1</span>].remove(jdkNode)</span><br><span class="line">            <span class="keyword">def</span> sdkString = <span class="string">"Android API "</span> + android.compileSdkVersion.substring(<span class="string">"android-"</span>.length()) + <span class="string">" Platform"</span></span><br><span class="line">            <span class="keyword">new</span> Node(parsedXml.component[<span class="number">1</span>], <span class="string">'orderEntry'</span>, [<span class="string">'type'</span>: <span class="string">'jdk'</span>, <span class="string">'jdkName'</span>: sdkString, <span class="string">'jdkType'</span>: <span class="string">'Android SDK'</span>])</span><br><span class="line">            groovy.xml.XmlUtil.serialize(parsedXml, <span class="keyword">new</span> FileOutputStream(imlFile))</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            <span class="comment">// nop, iml not found</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="最终，Android-studio在编译时优先使用导入的jar包，什么系统隐藏方法啥的，使用起来畅通无阻！！"><a href="#最终，Android-studio在编译时优先使用导入的jar包，什么系统隐藏方法啥的，使用起来畅通无阻！！" class="headerlink" title="最终，Android studio在编译时优先使用导入的jar包，什么系统隐藏方法啥的，使用起来畅通无阻！！"></a>最终，Android studio在编译时优先使用导入的jar包，什么系统隐藏方法啥的，使用起来畅通无阻！！</h4><p><img src="https://upload-images.jianshu.io/upload_images/3167266-04f4d427f2967521.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;h3 id=&quot;前言&quot;&gt;&lt;a href=&quot;#前言&quot; class=&quot;headerlink&quot; title=&quot;前言&quot;&gt;&lt;/a&gt;前言&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;前段时间负责了一个系统设置的项目，里面用到了大量的系统隐藏方法，所以自己用Eclipse打了一个系统jar包，但是导入到Android studio的时候，中间踩了很多坑，现在总结一下，防止大家踩坑。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h3 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;按照下面步骤一步一步来，基本不会出现大问题。&lt;/p&gt;
&lt;/blockquote&gt;&lt;h4 id=&quot;1、将系统jar包放到module的libs文件夹下&quot;&gt;&lt;a href=&quot;#1、将系统jar包放到module的libs文件夹下&quot; class=&quot;headerlink&quot; title=&quot;1、将系统jar包放到module的libs文件夹下&quot;&gt;&lt;/a&gt;1、将系统jar包放到module的libs文件夹下&lt;/h4&gt;
    
    </summary>
    
    
    
      <category term="Android" scheme="https://evanzch.github.io/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>BottomNavigationView + Fragment 底部导航栏实现</title>
    <link href="https://evanzch.github.io//blog/BottomNavigationView%20+%20Fragment%20%E5%BA%95%E9%83%A8%E5%AF%BC%E8%88%AA%E6%A0%8F%E5%AE%9E%E7%8E%B0.html"/>
    <id>https://evanzch.github.io//blog/BottomNavigationView + Fragment 底部导航栏实现.html</id>
    <published>2018-08-26T16:00:00.000Z</published>
    <updated>2019-11-04T11:09:05.903Z</updated>
    
    <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote><p>本篇是自己在学习 <code>BottomNavigationView</code> 时整理的笔记。</p></blockquote><p>效果图：<br><img src="https://upload-images.jianshu.io/upload_images/3167266-ca2ff302625c7408.gif?imageMogr2/auto-orient/strip" alt="效果图.gif"></p><p>目录结构：<br><img src="https://upload-images.jianshu.io/upload_images/3167266-bc45c99e19500cb4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="目录结构.png"></p><h4 id="https-github-com-Evan-zch-BottomNavigationViewDemo"><a href="#https-github-com-Evan-zch-BottomNavigationViewDemo" class="headerlink" title="https://github.com/Evan-zch/BottomNavigationViewDemo"></a><a href="https://github.com/Evan-zch/BottomNavigationViewDemo" target="_blank" rel="noopener">https://github.com/Evan-zch/BottomNavigationViewDemo</a></h4><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>​前面呈现的效果图是现在很多主流App都在使用底部导航栏模式，比如常用的微信、QQ这些基本的社交软件，其实要实现上面的效果也很简单。</p><a id="more"></a><h5 id="1、添加库文件"><a href="#1、添加库文件" class="headerlink" title="1、添加库文件"></a>1、添加库文件</h5><blockquote><p>要使用 <code>BottomNavigationView</code> 需要在build.gradle中添加<code>design</code>库</p></blockquote><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">implementation</span> <span class="string">'com.android.support:design:27.1.1'</span></span><br></pre></td></tr></table></figure><h5 id="2、布局文件"><a href="#2、布局文件" class="headerlink" title="2、布局文件"></a>2、布局文件</h5><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&lt;android.support.design.widget.BottomNavigationView</span><br><span class="line">        android:<span class="attribute">id</span>=<span class="string">"@+id/bv_bottomNavigation"</span></span><br><span class="line">        android:<span class="attribute">layout_width</span>=<span class="string">"match_parent"</span></span><br><span class="line">        android:<span class="attribute">layout_height</span>=<span class="string">"wrap_content"</span></span><br><span class="line">        android:<span class="attribute">layout_alignParentBottom</span>=<span class="string">"true"</span></span><br><span class="line">        android:<span class="attribute">background</span>=<span class="string">"@color/write"</span></span><br><span class="line">        app:<span class="attribute">itemIconTint</span>=<span class="string">"@drawable/bottom_navigation_item_selector"</span></span><br><span class="line">        app:<span class="attribute">itemTextColor</span>=<span class="string">"@drawable/bottom_navigation_item_selector"</span></span><br><span class="line">        app:<span class="attribute">menu</span>=<span class="string">"@menu/main_bottom_navigation"</span> /&gt;</span><br></pre></td></tr></table></figure><blockquote><p><code>app:itemBackground</code>：设置item的背景</p><p><code>app:itemIconTint</code>：设置icon的颜色</p><p><code>app:itemTextColor</code>：设置文字的颜色</p><p><code>app:menu</code> ：设置底部导航栏icon和文字</p></blockquote><h5 id="3、bottom-navigation-item-selector-xml"><a href="#3、bottom-navigation-item-selector-xml" class="headerlink" title="3、bottom_navigation_item_selector.xml"></a>3、<code>bottom_navigation_item_selector.xml</code></h5><blockquote><p>  <code>app:itemIconTint=&quot;@drawable/bottom_navigation_item_selector&quot;</code><br>  <code>app:itemTextColor=&quot;@drawable/bottom_navigation_item_selector&quot;</code></p></blockquote><p>在<code>drawable</code>下新建<code>xml</code>文件，通过为 <code>itemIconTint</code> 和 <code>itemTextColor</code> 设置 <code>selector</code>,可实现在点击时<code>icon</code>和<code>title</code>颜色的变换。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:color</span>=<span class="string">"@color/theme"</span> <span class="attr">android:state_checked</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:color</span>=<span class="string">"@color/bottom_navigation_normal"</span> <span class="attr">android:state_checked</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure><h5 id="4、main-bottom-navigation-xml"><a href="#4、main-bottom-navigation-xml" class="headerlink" title="4、main_bottom_navigation.xml"></a>4、<code>main_bottom_navigation.xml</code></h5><blockquote><p><code>app:menu=&quot;@menu/main_bottom_navigation&quot;</code></p></blockquote><p>在<code>menu</code>目录下新建<code>xml</code>文件，自定义底部导航栏<code>icon</code>及<code>title</code>，代码如下：</p><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">&lt;menu xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span>&gt;</span><br><span class="line">    &lt;<span class="built_in">item</span></span><br><span class="line">        android:<span class="built_in">id</span>=<span class="string">"@+id/menu_message"</span></span><br><span class="line">        android:enabled=<span class="string">"true"</span></span><br><span class="line">        android:icon=<span class="string">"@mipmap/message"</span></span><br><span class="line">        app:showAsAction=<span class="string">"ifRoom"</span></span><br><span class="line">        android:title=<span class="string">"消息"</span> /&gt;</span><br><span class="line">    &lt;<span class="built_in">item</span></span><br><span class="line">        android:<span class="built_in">id</span>=<span class="string">"@+id/menu_contacts"</span></span><br><span class="line">        android:enabled=<span class="string">"true"</span></span><br><span class="line">        android:icon=<span class="string">"@mipmap/icon_contacts"</span></span><br><span class="line">        app:showAsAction=<span class="string">"ifRoom"</span></span><br><span class="line">        android:title=<span class="string">"联系人"</span> /&gt;</span><br><span class="line">    &lt;<span class="built_in">item</span></span><br><span class="line">        android:<span class="built_in">id</span>=<span class="string">"@+id/menu_discover"</span></span><br><span class="line">        android:enabled=<span class="string">"true"</span></span><br><span class="line">        android:icon=<span class="string">"@mipmap/icon_discover"</span></span><br><span class="line">        app:showAsAction=<span class="string">"ifRoom"</span></span><br><span class="line">        android:title=<span class="string">"发现"</span> /&gt;</span><br><span class="line">    &lt;<span class="built_in">item</span></span><br><span class="line">        android:<span class="built_in">id</span>=<span class="string">"@+id/menu_me"</span></span><br><span class="line">        android:enabled=<span class="string">"true"</span></span><br><span class="line">        app:showAsAction=<span class="string">"ifRoom"</span></span><br><span class="line">        android:icon=<span class="string">"@mipmap/me"</span></span><br><span class="line">        android:title=<span class="string">"我"</span> /&gt;</span><br><span class="line">&lt;/menu&gt;</span><br></pre></td></tr></table></figure><h5 id="5、在Activity中进行初始化："><a href="#5、在Activity中进行初始化：" class="headerlink" title="5、在Activity中进行初始化："></a>5、在Activity中进行初始化：</h5><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> initBottomNavigation() &#123;</span><br><span class="line">        mBottomNavigationView = findViewById(R.id.bv_bottomNavigation);</span><br><span class="line">        <span class="comment">// 添加监听</span></span><br><span class="line">        mBottomNavigationView.setOnNavigationItemSelectedListener(<span class="keyword">new</span> BottomNavigationView.OnNavigationItemSelectedListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">boolean</span> onNavigationItemSelected(<span class="meta">@NonNull</span> MenuItem item) &#123;</span><br><span class="line">                <span class="keyword">switch</span> (item.getItemId()) &#123;</span><br><span class="line">                    <span class="keyword">case</span> R.id.<span class="string">menu_message:</span></span><br><span class="line">                        setFragmentPosition(<span class="number">0</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> R.id.<span class="string">menu_contacts:</span></span><br><span class="line">                        setFragmentPosition(<span class="number">1</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> R.id.<span class="string">menu_discover:</span></span><br><span class="line">                        setFragmentPosition(<span class="number">2</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> R.id.<span class="string">menu_me:</span></span><br><span class="line">                        setFragmentPosition(<span class="number">3</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line"><span class="symbol">                    default:</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 这里注意返回true,否则点击失效</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h3 id="特别说明"><a href="#特别说明" class="headerlink" title="特别说明"></a>特别说明</h3><p>当底部导航栏<code>item</code>数目大于三个时，展示效果如下：</p><p><img src="https://upload-images.jianshu.io/upload_images/3167266-1a0e8cf9db63ba3a.gif?imageMogr2/auto-orient/strip" alt="item大于三个时效果图.gif"></p><p>当<code>item</code>数目大于三个时，底部导航栏展示的效果采取动画的方式，很多时候非我们想要的效果， 通过反射来进行处理<a href="https://blog.csdn.net/aiynmimi/article/details/72967585" target="_blank" rel="noopener">原文</a> 。</p><p>代码如下：</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">public <span class="keyword">class</span> BottomNavigationViewHelper &#123;</span><br><span class="line">    @<span class="constructor">SuppressLint(<span class="string">"RestrictedApi"</span>)</span></span><br><span class="line">    public static void disable<span class="constructor">ShiftMode(BottomNavigationView <span class="params">view</span>)</span> &#123;</span><br><span class="line">        BottomNavigationMenuView menuView = (BottomNavigationMenuView) view.get<span class="constructor">ChildAt(0)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Field shiftingMode = menuView.get<span class="constructor">Class()</span>.get<span class="constructor">DeclaredField(<span class="string">"mShiftingMode"</span>)</span>;</span><br><span class="line">            shiftingMode.set<span class="constructor">Accessible(<span class="params">true</span>)</span>;</span><br><span class="line">            shiftingMode.set<span class="constructor">Boolean(<span class="params">menuView</span>, <span class="params">false</span>)</span>;</span><br><span class="line">            shiftingMode.set<span class="constructor">Accessible(<span class="params">false</span>)</span>;</span><br><span class="line">            for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; menuView.get<span class="constructor">ChildCount()</span>; i++) &#123;</span><br><span class="line">                BottomNavigationItemView item = (BottomNavigationItemView) menuView.get<span class="constructor">ChildAt(<span class="params">i</span>)</span>;</span><br><span class="line">                <span class="comment">//noinspection RestrictedApi</span></span><br><span class="line">                item.set<span class="constructor">ShiftingMode(<span class="params">false</span>)</span>;</span><br><span class="line">                <span class="comment">// set once again checked value, so view will be updated</span></span><br><span class="line">                <span class="comment">//noinspection RestrictedApi</span></span><br><span class="line">                item.set<span class="constructor">Checked(<span class="params">item</span>.<span class="params">getItemData</span>()</span>.is<span class="constructor">Checked()</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (NoSuchFieldException e) &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>e(<span class="string">"BNVHelper"</span>, <span class="string">"Unable to get shift mode field"</span>, e);</span><br><span class="line">        &#125; catch (IllegalAccessException e) &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>e(<span class="string">"BNVHelper"</span>, <span class="string">"Unable to change value of shift mode"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以在初始化的时候多添加一行代码就能避免这个问题</p><figure class="highlight reasonml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">mBottomNavigationView = find<span class="constructor">ViewById(R.<span class="params">id</span>.<span class="params">bv_bottomNavigation</span>)</span>;</span><br><span class="line"><span class="comment">// 解决当item大于三个时，非平均布局问题</span></span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">BottomNavigationViewHelper</span>.</span></span>disable<span class="constructor">ShiftMode(<span class="params">mBottomNavigationView</span>)</span>;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;link rel=&quot;stylesheet&quot; class=&quot;aplayer-secondary-style-marker&quot; href=&quot;\assets\css\APlayer.min.css&quot;&gt;&lt;script src=&quot;\assets\js\APlayer.min.js&quot; class=&quot;aplayer-secondary-script-marker&quot;&gt;&lt;/script&gt;&lt;blockquote&gt;
&lt;p&gt;本篇是自己在学习 &lt;code&gt;BottomNavigationView&lt;/code&gt; 时整理的笔记。&lt;/p&gt;
&lt;/blockquote&gt;&lt;p&gt;效果图：&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3167266-ca2ff302625c7408.gif?imageMogr2/auto-orient/strip&quot; alt=&quot;效果图.gif&quot;&gt;&lt;/p&gt;&lt;p&gt;目录结构：&lt;br&gt;&lt;img src=&quot;https://upload-images.jianshu.io/upload_images/3167266-bc45c99e19500cb4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240&quot; alt=&quot;目录结构.png&quot;&gt;&lt;/p&gt;&lt;h4 id=&quot;https-github-com-Evan-zch-BottomNavigationViewDemo&quot;&gt;&lt;a href=&quot;#https-github-com-Evan-zch-BottomNavigationViewDemo&quot; class=&quot;headerlink&quot; title=&quot;https://github.com/Evan-zch/BottomNavigationViewDemo&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://github.com/Evan-zch/BottomNavigationViewDemo&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://github.com/Evan-zch/BottomNavigationViewDemo&lt;/a&gt;&lt;/h4&gt;&lt;h3 id=&quot;正文&quot;&gt;&lt;a href=&quot;#正文&quot; class=&quot;headerlink&quot; title=&quot;正文&quot;&gt;&lt;/a&gt;正文&lt;/h3&gt;&lt;p&gt;​前面呈现的效果图是现在很多主流App都在使用底部导航栏模式，比如常用的微信、QQ这些基本的社交软件，其实要实现上面的效果也很简单。&lt;/p&gt;
    
    </summary>
    
    
    
      <category term="Android" scheme="https://evanzch.github.io/tags/Android/"/>
    
  </entry>
  
</feed>
