<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Android SD卡及U盘插拔状态监听及内容读取</title>
    <url>//blog/Android%20SD%E5%8D%A1%E5%8F%8AU%E7%9B%98%E6%8F%92%E6%8B%94%E7%8A%B6%E6%80%81%E7%9B%91%E5%90%AC%E5%8F%8A%E5%86%85%E5%AE%B9%E8%AF%BB%E5%8F%96.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>本篇是通过系统方法来对sd卡及U盘插拔监听及数据获取，Android盒子端开发，有系统权限，当然，这个比较简单，知道具体方法，可以通过反射来实现。</p>
</blockquote><p>先贴上效果图：</p><h4 id="获取外置存储设备并监听插拔状态"><a href="#获取外置存储设备并监听插拔状态" class="headerlink" title="获取外置存储设备并监听插拔状态"></a>获取外置存储设备并监听插拔状态</h4><p><img src="https://upload-images.jianshu.io/upload_images/3167266-4c93bab3b3035dcc.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h4 id="获取文件内容"><a href="#获取文件内容" class="headerlink" title="获取文件内容"></a>获取文件内容</h4><p><img src="https://upload-images.jianshu.io/upload_images/3167266-ca0e6b180fbc897a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><p>先说需求，App在引导过程中，通过外置存储设备（U盘或者sd卡）上传指定的配置文件，开始我没打算用系统方法，网上看到 <a href="https://github.com/magnusja/libaums" target="_blank" rel="noopener">libaums</a> 这个库文件，尝试使用了一下，但是最后发现它并不能友好的支持NTFS格式U盘，能监听到，但是好像没有办法获取到路径，最后看官方也说了不支持NTFS格式，最后索性直接使用系统方法，反正有权限，真的可以<strong>为所欲为</strong>。</p><a id="more"></a>




<h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p><img src="https://upload-images.jianshu.io/upload_images/3167266-9866bb07a87688cf.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>可以看到系统设置里面，是能监听到ntfs格式u盘（Evan_zch）的，并且能获取U盘里面的文件，这样就好办了，挽起袖子直接开干。</p>
<h4 id="1、页面定位"><a href="#1、页面定位" class="headerlink" title="1、页面定位"></a>1、页面定位</h4><p>要查看具体某个功能的源码，可以通过界面定位，这样能更快的找到我们想要的代码。<br>通过执行下面代码，可以直接定位当前展示界面的包名和类名。</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">linux:</span><br><span class="line"></span><br><span class="line">adb <span class="keyword">shell</span><span class="bash"> dumpsys activity | grep <span class="string">"mFocusedActivity"</span></span></span><br><span class="line"></span><br><span class="line">windows:</span><br><span class="line"></span><br><span class="line">adb <span class="keyword">shell</span><span class="bash"> dumpsys activity | findstr <span class="string">"mFocusedActivity"</span></span></span><br></pre></td></tr></table></figure>
<p>执行结果：<br><img src="https://upload-images.jianshu.io/upload_images/3167266-147f441d330bcb8f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
<p>此时可以定位到系统设置存储界面是<code>StorageSettingsActivity</code>,这个时候可以去 <a href="https://www.androidos.net.cn/sourcecode" target="_blank" rel="noopener">Android OS</a> 这个网站搜索并查看相应的源码。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/3167266-29357edab2b958d3.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Snipaste_2018-09-20_11-43-55.png"></p>
<h4 id="2、源码分析"><a href="#2、源码分析" class="headerlink" title="2、源码分析"></a>2、源码分析</h4><p>直接查看 <code>StorageSettings</code> 这个界面源码，这个比较简单，大致还是能看的清楚，因为项目时间比较紧，没有仔细去研究，只贴一些关键代码，具体能实现我的需求，等完成了这个项目，再好好来琢磨。</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"><span class="keyword">private</span> StorageManager mStorageManager;</span><br><span class="line"><span class="comment">// 创建 StorageManager</span></span><br><span class="line">mStorageManager = context.get<span class="constructor">SystemService(StorageManager.<span class="params">class</span>)</span>;</span><br><span class="line"><span class="comment">// 注册监听</span></span><br><span class="line">mStorageManager.register<span class="constructor">Listener(<span class="params">mStorageListener</span>)</span>;</span><br></pre></td></tr></table></figure>

<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">// 监听回调</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">final</span> StorageEventListener mStorageListener = <span class="keyword">new</span> StorageEventListener() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onVolumeStateChanged</span><span class="params">(VolumeInfo vol, <span class="keyword">int</span> oldState, <span class="keyword">int</span> newState)</span> </span>&#123;</span><br><span class="line">            <span class="keyword">if</span> (isInteresting(vol)) &#123;</span><br><span class="line">                refresh();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDiskDestroyed</span><span class="params">(DiskInfo disk)</span> </span>&#123;</span><br><span class="line">            refresh();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    </span><br><span class="line">    </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isInteresting</span><span class="params">(VolumeInfo vol)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span>(vol.getType()) &#123;</span><br><span class="line">            <span class="comment">// 内置存储设备</span></span><br><span class="line">            <span class="keyword">case</span> VolumeInfo.TYPE_PRIVATE:</span><br><span class="line">            <span class="comment">// 外置存储设备</span></span><br><span class="line">            <span class="keyword">case</span> VolumeInfo.TYPE_PUBLIC:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>在源码中，直接在 <code>onCreate</code> 方法中创建 <code>StorageManager</code> 然后通过 <code>registerListener</code> 注册存储设备的监听，在监听回调里可以直接判断存储设备的状态，其中说一下 <code>onVolumeStateChanged</code> 回调中的 <code>oldState</code> 和 <code>newState</code> 参数。通过查看源码，能发现在 <code>VolumeInfo</code> 类中设置了存储设备的一些基本状态。</p>
<figure class="highlight angelscript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> static <span class="keyword">final</span> <span class="built_in">int</span> STATE_UNMOUNTED = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">public</span> static <span class="keyword">final</span> <span class="built_in">int</span> STATE_CHECKING = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">public</span> static <span class="keyword">final</span> <span class="built_in">int</span> STATE_MOUNTED = <span class="number">2</span>;</span><br><span class="line"><span class="keyword">public</span> static <span class="keyword">final</span> <span class="built_in">int</span> STATE_MOUNTED_READ_ONLY = <span class="number">3</span>;</span><br><span class="line"><span class="keyword">public</span> static <span class="keyword">final</span> <span class="built_in">int</span> STATE_FORMATTING = <span class="number">4</span>;</span><br><span class="line"><span class="keyword">public</span> static <span class="keyword">final</span> <span class="built_in">int</span> STATE_EJECTING = <span class="number">5</span>;</span><br><span class="line"><span class="keyword">public</span> static <span class="keyword">final</span> <span class="built_in">int</span> STATE_UNMOUNTABLE = <span class="number">6</span>;</span><br><span class="line"><span class="keyword">public</span> static <span class="keyword">final</span> <span class="built_in">int</span> STATE_REMOVED = <span class="number">7</span>;</span><br><span class="line"><span class="keyword">public</span> static <span class="keyword">final</span> <span class="built_in">int</span> STATE_BAD_REMOVAL = <span class="number">8</span>;</span><br></pre></td></tr></table></figure>

<p>在回调中添加打印日志：<br><img src="https://upload-images.jianshu.io/upload_images/3167266-63dca82dd881ec7b.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>通过后台日志，可以发现在U盘插入过程中，其状态变化为：<br><code>STATE_UNMOUNTED</code>  ——&gt;  <code>STATE_CHECKING</code> ——&gt; <code>STATE_MOUNTED</code><br><img src="https://upload-images.jianshu.io/upload_images/3167266-e5159f5afb6b46be.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="U盘插入日志"><br>U盘拨出，状态变化：<br><code>STATE_EJECTING</code>  ——&gt;   <code>STATE_UNMOUNTED</code>  ——&gt; <code>STATE_BAD_REMOVAL</code><br>最后调用监听回调中的 <code>onDiskDestroyed</code> 方法。<br><img src="https://upload-images.jianshu.io/upload_images/3167266-7e0b38c61d54c90a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="U盘拔出日志"></p>
<p>为了避免 <code>onVolumeStateChanged</code>  的多次回调，我自己写了个判断方法 <code>isMounted</code>，我们可以在 <code>onVolumeStateChanged</code>  加入 <code>isMounted</code>判断方法，只有当是外置存储设备且挂载成功后才进行ui更新。</p>
<figure class="highlight arduino"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isMounted</span><span class="params">(VolumeInfo vol, <span class="keyword">int</span> oldState, <span class="keyword">int</span> newState)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">return</span> (isInteresting(vol) &amp;&amp; oldState != newState &amp;&amp; newState == VolumeInfo.STATE_MOUNTED);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isInteresting</span><span class="params">(VolumeInfo vol)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">switch</span> (vol.getType()) &#123;</span><br><span class="line">       	<span class="comment">// 这里我们只关心外置存储设备，所以直接注释掉了 TYPE_PRIVATE</span></span><br><span class="line">           <span class="comment">// case VolumeInfo.TYPE_PRIVATE:</span></span><br><span class="line">           <span class="keyword">case</span> VolumeInfo.TYPE_PUBLIC:</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">           <span class="keyword">default</span>:</span><br><span class="line">               <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">       &#125;</span><br><span class="line">   &#125;</span><br></pre></td></tr></table></figure>

<p>在监听回调后，可以通过<code>StorageManager</code>类的 <code>getVolumes</code>方法，获取所有的存储设备。</p>
<figure class="highlight pgsql"><table><tr><td class="code"><pre><span class="line"><span class="built_in">public</span> List&lt;VolumeInfo&gt; getStorageDeviceList() &#123;</span><br><span class="line">        <span class="keyword">if</span> (mStorageManager == <span class="keyword">null</span>) &#123;</span><br><span class="line">            throw <span class="built_in">new</span> RuntimeException("StorageManagerUtils not init");</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;VolumeInfo&gt; volumes = mStorageManager.getVolumes();</span><br><span class="line">        List&lt;VolumeInfo&gt; publicVolumes = <span class="built_in">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        publicVolumes.clear();</span><br><span class="line">        <span class="keyword">for</span> (VolumeInfo <span class="keyword">info</span> : volumes) &#123;</span><br><span class="line">            <span class="type">int</span> <span class="keyword">type</span> = <span class="keyword">info</span>.getType();</span><br><span class="line">            // 获取当前存储设备的路径</span><br><span class="line">            File <span class="type">path</span> = volumeInfo.getPath();</span><br><span class="line">            // 同样的，只关心外置存储设备。</span><br><span class="line">            <span class="keyword">if</span> (<span class="keyword">info</span>.getType() == VolumeInfo.TYPE_PUBLIC) &#123;</span><br><span class="line">                publicVolumes.<span class="keyword">add</span>(<span class="keyword">info</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="keyword">info</span>.getType() == VolumeInfo.TYPE_PRIVATE)&#123;</span><br><span class="line">                // 获取内置存储设备</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> publicVolumes;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<p>当拿到设备后，通过 <code>VolumeInfo</code> 类的 <code>getPath</code> 方法就可以获取到U盘具体路径<br><img src="https://upload-images.jianshu.io/upload_images/3167266-f2843d816c8a953a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt><br>后面就可以通过这个路径直接获取U盘的文件了，基本就大功告成，时间有点急，写得有点粗糙，后面有时间再整理一下。<br>最后贴一下工具类的完整代码：</p>
<figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span> Evan_zch</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@date</span> 2018/9/17 19:13</span></span><br><span class="line"><span class="comment"> * &lt;p&gt;</span></span><br><span class="line"><span class="comment"> * 存储设备管理类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">StorageManagerUtils</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"StorageManagerUtils"</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">final</span> StorageManager mStorageManager;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> totalBytes = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">long</span> usedBytes = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="class"><span class="keyword">class</span> <span class="title">StorageManagerHolder</span> </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> StorageManagerUtils INSTANCE = <span class="keyword">new</span> StorageManagerUtils();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> StorageManagerUtils <span class="title">getInstance</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> StorageManagerHolder.INSTANCE;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="title">StorageManagerUtils</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        mStorageManager = DigiTvApplication.getAppContext().getSystemService(StorageManager<span class="class">.<span class="keyword">class</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> List&lt;VolumeInfo&gt; <span class="title">getStorageDeviceList</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mStorageManager == <span class="keyword">null</span>) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> RuntimeException(<span class="string">"StorageManagerUtils not init"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        List&lt;VolumeInfo&gt; volumes = mStorageManager.getVolumes();</span><br><span class="line">        List&lt;VolumeInfo&gt; publicVolumes = <span class="keyword">new</span> ArrayList&lt;&gt;();</span><br><span class="line">        publicVolumes.clear();</span><br><span class="line">        <span class="keyword">for</span> (VolumeInfo info : volumes) &#123;</span><br><span class="line">            <span class="keyword">int</span> type = info.getType();</span><br><span class="line">            <span class="keyword">if</span> (info.getType() == VolumeInfo.TYPE_PUBLIC) &#123;</span><br><span class="line">                Logutils.d(TAG + <span class="string">"--refresh  type is public"</span>);</span><br><span class="line">                String bestVolumeDescription = mStorageManager.getBestVolumeDescription(info);</span><br><span class="line">                File path = info.getPath();</span><br><span class="line">                Logutils.d(TAG + <span class="string">"--refresh  type="</span> + type + <span class="string">",bestVolumeDescription="</span> + bestVolumeDescription + <span class="string">",path="</span> + path);</span><br><span class="line">                publicVolumes.add(info);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> publicVolumes;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isMounted</span><span class="params">(VolumeInfo vol, <span class="keyword">int</span> oldState, <span class="keyword">int</span> newState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (isInteresting(vol) &amp;&amp; oldState != newState &amp;&amp; newState == VolumeInfo.STATE_MOUNTED);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isInteresting</span><span class="params">(VolumeInfo vol)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">switch</span> (vol.getType()) &#123;</span><br><span class="line">            <span class="comment">//case VolumeInfo.TYPE_PRIVATE:</span></span><br><span class="line">            <span class="keyword">case</span> VolumeInfo.TYPE_PUBLIC:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getTotalSize</span><span class="params">(VolumeInfo vol)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (vol.isMountedReadable()) &#123;</span><br><span class="line">            <span class="keyword">final</span> File path = vol.getPath();</span><br><span class="line">            <span class="keyword">if</span> (totalBytes &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">                totalBytes = path.getTotalSpace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Formatter.formatFileSize(DigiTvApplication.getAppContext(), totalBytes);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getUsedSize</span><span class="params">(VolumeInfo vol)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (vol.isMountedReadable()) &#123;</span><br><span class="line">            <span class="keyword">final</span> File path = vol.getPath();</span><br><span class="line">            <span class="keyword">final</span> <span class="keyword">long</span> freeBytes = path.getFreeSpace();</span><br><span class="line">            usedBytes = totalBytes - freeBytes;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> Formatter.formatFileSize(DigiTvApplication.getAppContext(), usedBytes);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>Android Studio 导入系统jar包的正确姿势</title>
    <url>//blog/Android%20Studio%20%E5%AF%BC%E5%85%A5%E7%B3%BB%E7%BB%9Fjar%E5%8C%85%E7%9A%84%E6%AD%A3%E7%A1%AE%E5%A7%BF%E5%8A%BF.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><h3 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h3><blockquote>
<p>前段时间负责了一个系统设置的项目，里面用到了大量的系统隐藏方法，所以自己用Eclipse打了一个系统jar包，但是导入到Android studio的时候，中间踩了很多坑，现在总结一下，防止大家踩坑。</p>
</blockquote><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><blockquote>
<p>按照下面步骤一步一步来，基本不会出现大问题。</p>
</blockquote><h4 id="1、将系统jar包放到module的libs文件夹下"><a href="#1、将系统jar包放到module的libs文件夹下" class="headerlink" title="1、将系统jar包放到module的libs文件夹下"></a>1、将系统jar包放到module的libs文件夹下</h4><a id="more"></a>

<p><img src="https://upload-images.jianshu.io/upload_images/3167266-24c630a432e35cf8.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
<h4 id="2、在Module下的build-gradle添加"><a href="#2、在Module下的build-gradle添加" class="headerlink" title="2、在Module下的build.gradle添加"></a>2、在Module下的<code>build.gradle</code>添加</h4><figure class="highlight isbl"><table><tr><td class="code"><pre><span class="line"><span class="variable">provided</span> <span class="function"><span class="title">files</span>(<span class="string">'libs/android_framework.jar'</span>)</span></span><br></pre></td></tr></table></figure>



<blockquote>
<p>注意 <code>provided</code>作用是只在编译时使用，最终不会打包到Apk中<br><strong>更新 ：在<code>Android studio3.0</code> 后，<del>provided</del> 被 <code>compileOnly</code> 替代</strong> </p>
</blockquote>
<p>####3、在Project下的<code>build.gradle</code>文件中添加</p>
<figure class="highlight dockerfile"><table><tr><td class="code"><pre><span class="line">   gradle.projectsEvaluated &#123;</span><br><span class="line">        tasks.withType(JavaCompile) &#123;</span><br><span class="line">            options.compilerArgs.<span class="keyword">add</span><span class="bash">(<span class="string">'-Xbootclasspath/p:app/libs/android_framework.jar'</span>)         </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<blockquote>
<p>app/libs/android_framework.jar 为jar包路径，app为Module名<br>注意：<code>gradle.projectsEvaluated</code> 是放在 <code>allprojects</code> 标签内。</p>
</blockquote>
<p><img src="https://upload-images.jianshu.io/upload_images/3167266-8f047868988a7386.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
<p>这个时候基本就算大功告成了，但是，你会发现，使用系统隐藏方法的地方还是会爆红，那是因为Android Studio在编译时优先使用系统的Sdk。</p>
<p><img src="https://upload-images.jianshu.io/upload_images/3167266-61ffbc88f5faa86a.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
<h3 id="解决办法："><a href="#解决办法：" class="headerlink" title="解决办法："></a>解决办法：</h3><blockquote>
<p>找到Module下的.iml文件，在里面将你导入的jar包放在sdk之前，这样Android studio编译时优先使用导入的系统jar而不是sdk中的。</p>
</blockquote>
<p><img src="https://upload-images.jianshu.io/upload_images/3167266-4b91e8966b8685ce.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
<p>通过代码改变，在module的build.gradle中最后添加如下代码重新编译后，会发现顺序变化</p>
<figure class="highlight gradle"><table><tr><td class="code"><pre><span class="line">preBuild &#123;</span><br><span class="line">    <span class="keyword">doLast</span> &#123;</span><br><span class="line">        <span class="keyword">def</span> imlFile = <span class="keyword">file</span>(<span class="keyword">project</span>.name + <span class="string">".iml"</span>)</span><br><span class="line">        <span class="keyword">println</span> <span class="string">'Change '</span> + <span class="keyword">project</span>.name + <span class="string">'.iml order'</span></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">def</span> parsedXml = (<span class="keyword">new</span> XmlParser()).parse(imlFile)</span><br><span class="line">            <span class="keyword">def</span> jdkNode = parsedXml.component[<span class="number">1</span>].orderEntry.<span class="keyword">find</span> &#123; it.<span class="string">'@type'</span> == <span class="string">'jdk'</span> &#125;</span><br><span class="line">            parsedXml.component[<span class="number">1</span>].remove(jdkNode)</span><br><span class="line">            <span class="keyword">def</span> sdkString = <span class="string">"Android API "</span> + android.compileSdkVersion.substring(<span class="string">"android-"</span>.length()) + <span class="string">" Platform"</span></span><br><span class="line">            <span class="keyword">new</span> Node(parsedXml.component[<span class="number">1</span>], <span class="string">'orderEntry'</span>, [<span class="string">'type'</span>: <span class="string">'jdk'</span>, <span class="string">'jdkName'</span>: sdkString, <span class="string">'jdkType'</span>: <span class="string">'Android SDK'</span>])</span><br><span class="line">            groovy.xml.XmlUtil.serialize(parsedXml, <span class="keyword">new</span> FileOutputStream(imlFile))</span><br><span class="line">        &#125; <span class="keyword">catch</span> (FileNotFoundException e) &#123;</span><br><span class="line">            <span class="comment">// nop, iml not found</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>



<h4 id="最终，Android-studio在编译时优先使用导入的jar包，什么系统隐藏方法啥的，使用起来畅通无阻！！"><a href="#最终，Android-studio在编译时优先使用导入的jar包，什么系统隐藏方法啥的，使用起来畅通无阻！！" class="headerlink" title="最终，Android studio在编译时优先使用导入的jar包，什么系统隐藏方法啥的，使用起来畅通无阻！！"></a>最终，Android studio在编译时优先使用导入的jar包，什么系统隐藏方法啥的，使用起来畅通无阻！！</h4><p><img src="https://upload-images.jianshu.io/upload_images/3167266-04f4d427f2967521.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt></p>
]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
  <entry>
    <title>BottomNavigationView + Fragment 底部导航栏实现</title>
    <url>//blog/BottomNavigationView%20+%20Fragment%20%E5%BA%95%E9%83%A8%E5%AF%BC%E8%88%AA%E6%A0%8F%E5%AE%9E%E7%8E%B0.html</url>
    <content><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="\assets\css\APlayer.min.css"><script src="\assets\js\APlayer.min.js" class="aplayer-secondary-script-marker"></script><blockquote>
<p>本篇是自己在学习 <code>BottomNavigationView</code> 时整理的笔记。</p>
</blockquote><p>效果图：<br><img src="https://upload-images.jianshu.io/upload_images/3167266-ca2ff302625c7408.gif?imageMogr2/auto-orient/strip" alt="效果图.gif"></p><p>目录结构：<br><img src="https://upload-images.jianshu.io/upload_images/3167266-bc45c99e19500cb4.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="目录结构.png"></p><h4 id="https-github-com-Evan-zch-BottomNavigationViewDemo"><a href="#https-github-com-Evan-zch-BottomNavigationViewDemo" class="headerlink" title="https://github.com/Evan-zch/BottomNavigationViewDemo"></a><a href="https://github.com/Evan-zch/BottomNavigationViewDemo" target="_blank" rel="noopener">https://github.com/Evan-zch/BottomNavigationViewDemo</a></h4><h3 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h3><p>​前面呈现的效果图是现在很多主流App都在使用底部导航栏模式，比如常用的微信、QQ这些基本的社交软件，其实要实现上面的效果也很简单。</p><a id="more"></a>



<h5 id="1、添加库文件"><a href="#1、添加库文件" class="headerlink" title="1、添加库文件"></a>1、添加库文件</h5><blockquote>
<p>要使用 <code>BottomNavigationView</code> 需要在build.gradle中添加<code>design</code>库</p>
</blockquote>
<figure class="highlight clean"><table><tr><td class="code"><pre><span class="line"><span class="keyword">implementation</span> <span class="string">'com.android.support:design:27.1.1'</span></span><br></pre></td></tr></table></figure>
<h5 id="2、布局文件"><a href="#2、布局文件" class="headerlink" title="2、布局文件"></a>2、布局文件</h5><figure class="highlight routeros"><table><tr><td class="code"><pre><span class="line">&lt;android.support.design.widget.BottomNavigationView</span><br><span class="line">        android:<span class="attribute">id</span>=<span class="string">"@+id/bv_bottomNavigation"</span></span><br><span class="line">        android:<span class="attribute">layout_width</span>=<span class="string">"match_parent"</span></span><br><span class="line">        android:<span class="attribute">layout_height</span>=<span class="string">"wrap_content"</span></span><br><span class="line">        android:<span class="attribute">layout_alignParentBottom</span>=<span class="string">"true"</span></span><br><span class="line">        android:<span class="attribute">background</span>=<span class="string">"@color/write"</span></span><br><span class="line">        app:<span class="attribute">itemIconTint</span>=<span class="string">"@drawable/bottom_navigation_item_selector"</span></span><br><span class="line">        app:<span class="attribute">itemTextColor</span>=<span class="string">"@drawable/bottom_navigation_item_selector"</span></span><br><span class="line">        app:<span class="attribute">menu</span>=<span class="string">"@menu/main_bottom_navigation"</span> /&gt;</span><br></pre></td></tr></table></figure>

<blockquote>
<p><code>app:itemBackground</code>：设置item的背景</p>
<p><code>app:itemIconTint</code>：设置icon的颜色</p>
<p><code>app:itemTextColor</code>：设置文字的颜色</p>
<p><code>app:menu</code> ：设置底部导航栏icon和文字</p>
</blockquote>
<h5 id="3、bottom-navigation-item-selector-xml"><a href="#3、bottom-navigation-item-selector-xml" class="headerlink" title="3、bottom_navigation_item_selector.xml"></a>3、<code>bottom_navigation_item_selector.xml</code></h5><blockquote>
<p>  <code>app:itemIconTint=&quot;@drawable/bottom_navigation_item_selector&quot;</code><br>  <code>app:itemTextColor=&quot;@drawable/bottom_navigation_item_selector&quot;</code></p>
</blockquote>
<p>在<code>drawable</code>下新建<code>xml</code>文件，通过为 <code>itemIconTint</code> 和 <code>itemTextColor</code> 设置 <code>selector</code>,可实现在点击时<code>icon</code>和<code>title</code>颜色的变换。</p>
<figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">selector</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:color</span>=<span class="string">"@color/theme"</span> <span class="attr">android:state_checked</span>=<span class="string">"true"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">item</span> <span class="attr">android:color</span>=<span class="string">"@color/bottom_navigation_normal"</span> <span class="attr">android:state_checked</span>=<span class="string">"false"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">selector</span>&gt;</span></span><br></pre></td></tr></table></figure>

<h5 id="4、main-bottom-navigation-xml"><a href="#4、main-bottom-navigation-xml" class="headerlink" title="4、main_bottom_navigation.xml"></a>4、<code>main_bottom_navigation.xml</code></h5><blockquote>
<p><code>app:menu=&quot;@menu/main_bottom_navigation&quot;</code></p>
</blockquote>
<p>在<code>menu</code>目录下新建<code>xml</code>文件，自定义底部导航栏<code>icon</code>及<code>title</code>，代码如下：</p>
<figure class="highlight applescript"><table><tr><td class="code"><pre><span class="line">&lt;menu xmlns:android=<span class="string">"http://schemas.android.com/apk/res/android"</span></span><br><span class="line">    xmlns:app=<span class="string">"http://schemas.android.com/apk/res-auto"</span>&gt;</span><br><span class="line">    &lt;<span class="built_in">item</span></span><br><span class="line">        android:<span class="built_in">id</span>=<span class="string">"@+id/menu_message"</span></span><br><span class="line">        android:enabled=<span class="string">"true"</span></span><br><span class="line">        android:icon=<span class="string">"@mipmap/message"</span></span><br><span class="line">        app:showAsAction=<span class="string">"ifRoom"</span></span><br><span class="line">        android:title=<span class="string">"消息"</span> /&gt;</span><br><span class="line">    &lt;<span class="built_in">item</span></span><br><span class="line">        android:<span class="built_in">id</span>=<span class="string">"@+id/menu_contacts"</span></span><br><span class="line">        android:enabled=<span class="string">"true"</span></span><br><span class="line">        android:icon=<span class="string">"@mipmap/icon_contacts"</span></span><br><span class="line">        app:showAsAction=<span class="string">"ifRoom"</span></span><br><span class="line">        android:title=<span class="string">"联系人"</span> /&gt;</span><br><span class="line">    &lt;<span class="built_in">item</span></span><br><span class="line">        android:<span class="built_in">id</span>=<span class="string">"@+id/menu_discover"</span></span><br><span class="line">        android:enabled=<span class="string">"true"</span></span><br><span class="line">        android:icon=<span class="string">"@mipmap/icon_discover"</span></span><br><span class="line">        app:showAsAction=<span class="string">"ifRoom"</span></span><br><span class="line">        android:title=<span class="string">"发现"</span> /&gt;</span><br><span class="line">    &lt;<span class="built_in">item</span></span><br><span class="line">        android:<span class="built_in">id</span>=<span class="string">"@+id/menu_me"</span></span><br><span class="line">        android:enabled=<span class="string">"true"</span></span><br><span class="line">        app:showAsAction=<span class="string">"ifRoom"</span></span><br><span class="line">        android:icon=<span class="string">"@mipmap/me"</span></span><br><span class="line">        android:title=<span class="string">"我"</span> /&gt;</span><br><span class="line">&lt;/menu&gt;</span><br></pre></td></tr></table></figure>

<h5 id="5、在Activity中进行初始化："><a href="#5、在Activity中进行初始化：" class="headerlink" title="5、在Activity中进行初始化："></a>5、在Activity中进行初始化：</h5><figure class="highlight groovy"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">void</span> initBottomNavigation() &#123;</span><br><span class="line">        mBottomNavigationView = findViewById(R.id.bv_bottomNavigation);</span><br><span class="line">        <span class="comment">// 添加监听</span></span><br><span class="line">        mBottomNavigationView.setOnNavigationItemSelectedListener(<span class="keyword">new</span> BottomNavigationView.OnNavigationItemSelectedListener() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="keyword">boolean</span> onNavigationItemSelected(<span class="meta">@NonNull</span> MenuItem item) &#123;</span><br><span class="line">                <span class="keyword">switch</span> (item.getItemId()) &#123;</span><br><span class="line">                    <span class="keyword">case</span> R.id.<span class="string">menu_message:</span></span><br><span class="line">                        setFragmentPosition(<span class="number">0</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> R.id.<span class="string">menu_contacts:</span></span><br><span class="line">                        setFragmentPosition(<span class="number">1</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> R.id.<span class="string">menu_discover:</span></span><br><span class="line">                        setFragmentPosition(<span class="number">2</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">case</span> R.id.<span class="string">menu_me:</span></span><br><span class="line">                        setFragmentPosition(<span class="number">3</span>);</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line"><span class="symbol">                    default:</span></span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="comment">// 这里注意返回true,否则点击失效</span></span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure>

<h3 id="特别说明"><a href="#特别说明" class="headerlink" title="特别说明"></a>特别说明</h3><p>当底部导航栏<code>item</code>数目大于三个时，展示效果如下：</p>
<p><img src="https://upload-images.jianshu.io/upload_images/3167266-1a0e8cf9db63ba3a.gif?imageMogr2/auto-orient/strip" alt="item大于三个时效果图.gif"></p>
<p>当<code>item</code>数目大于三个时，底部导航栏展示的效果采取动画的方式，很多时候非我们想要的效果， 通过反射来进行处理<a href="https://blog.csdn.net/aiynmimi/article/details/72967585" target="_blank" rel="noopener">原文</a> 。</p>
<p>代码如下：</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line">public <span class="keyword">class</span> BottomNavigationViewHelper &#123;</span><br><span class="line">    @<span class="constructor">SuppressLint(<span class="string">"RestrictedApi"</span>)</span></span><br><span class="line">    public static void disable<span class="constructor">ShiftMode(BottomNavigationView <span class="params">view</span>)</span> &#123;</span><br><span class="line">        BottomNavigationMenuView menuView = (BottomNavigationMenuView) view.get<span class="constructor">ChildAt(0)</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Field shiftingMode = menuView.get<span class="constructor">Class()</span>.get<span class="constructor">DeclaredField(<span class="string">"mShiftingMode"</span>)</span>;</span><br><span class="line">            shiftingMode.set<span class="constructor">Accessible(<span class="params">true</span>)</span>;</span><br><span class="line">            shiftingMode.set<span class="constructor">Boolean(<span class="params">menuView</span>, <span class="params">false</span>)</span>;</span><br><span class="line">            shiftingMode.set<span class="constructor">Accessible(<span class="params">false</span>)</span>;</span><br><span class="line">            for (<span class="built_in">int</span> i = <span class="number">0</span>; i &lt; menuView.get<span class="constructor">ChildCount()</span>; i++) &#123;</span><br><span class="line">                BottomNavigationItemView item = (BottomNavigationItemView) menuView.get<span class="constructor">ChildAt(<span class="params">i</span>)</span>;</span><br><span class="line">                <span class="comment">//noinspection RestrictedApi</span></span><br><span class="line">                item.set<span class="constructor">ShiftingMode(<span class="params">false</span>)</span>;</span><br><span class="line">                <span class="comment">// set once again checked value, so view will be updated</span></span><br><span class="line">                <span class="comment">//noinspection RestrictedApi</span></span><br><span class="line">                item.set<span class="constructor">Checked(<span class="params">item</span>.<span class="params">getItemData</span>()</span>.is<span class="constructor">Checked()</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; catch (NoSuchFieldException e) &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>e(<span class="string">"BNVHelper"</span>, <span class="string">"Unable to get shift mode field"</span>, e);</span><br><span class="line">        &#125; catch (IllegalAccessException e) &#123;</span><br><span class="line">            <span class="module-access"><span class="module"><span class="identifier">Log</span>.</span></span>e(<span class="string">"BNVHelper"</span>, <span class="string">"Unable to change value of shift mode"</span>, e);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<p>可以在初始化的时候多添加一行代码就能避免这个问题</p>
<figure class="highlight reasonml"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">mBottomNavigationView = find<span class="constructor">ViewById(R.<span class="params">id</span>.<span class="params">bv_bottomNavigation</span>)</span>;</span><br><span class="line"><span class="comment">// 解决当item大于三个时，非平均布局问题</span></span><br><span class="line"><span class="module-access"><span class="module"><span class="identifier">BottomNavigationViewHelper</span>.</span></span>disable<span class="constructor">ShiftMode(<span class="params">mBottomNavigationView</span>)</span>;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>Android</tag>
      </tags>
  </entry>
</search>
